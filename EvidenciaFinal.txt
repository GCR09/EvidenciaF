Clase "Main":
public class Main {
    
    public static List<Usuario> usuarios;
    public static Medico medicos = new Medico();
    public static Paciente pacientes = new Paciente();
    public static Cita citas = new Cita();
    public static BufferedReader entrada =new BufferedReader(new InputStreamReader(System.in));
    
    public static void main(String[] args) throws IOException{
        boolean existeUsuario;
        String usuario = "";
        String contrasena = "";
        System.out.println("Cargando sistema... ");
        cargarUsuarios();
        medicos.cargarMedico();
        pacientes.cargarPacientes();
        citas.cargarCitas(medicos,pacientes);
        System.out.println("Inicio de sesion:");
        System.out.println("Usuario:");
        usuario = entrada.readLine();
        System.out.println("Contraseña");
        contrasena = entrada.readLine();
        existeUsuario = validarCredenciales(usuario, contrasena);
        if (existeUsuario) {
            System.out.println("existe el usuario");
            menu(usuario);
            
        } else {
            System.out.println("el usuario no existe o la contraseña no es correcta");
        }

    }
    
    public static void cargarUsuarios() {

        if (usuarios == null) {
            usuarios = new ArrayList<>();
        }

        usuarios.add(new Usuario(1, "Ricardo", "1234"));
        usuarios.add(new Usuario(2, "Esmeralda", "1234")
        );
        System.out.println("Los usuarios han sido cargados: " + usuarios.size());

    }

    public static boolean validarCredenciales(String usuario, String contrasena) {
        return usuarios.stream().anyMatch(x -> x.getNombre().equalsIgnoreCase(usuario) && x.getContrasena().equals(contrasena));
    }
    
    public static void menu(String usuario) throws IOException{
        int opcion;
        String repetir;
        int id;
        String nombre;
        System.out.println("¿Qué deseas realizar?:\n"
                + "1.-Dar de alta a medico\n"
                + "2.-Dar de alta a un paciente\n"
                + "3.-Crear una cita\n"
                + "4.-Entrar como administrdor\n"
                + "5.-Vertodas las listas");
        opcion=Integer.parseInt(entrada.readLine());
        switch(opcion){
            case 1:
                System.out.println("Seleccionaste \"Dar de alta a medico\"");
                System.out.println("------------------------------------");
                id = medicos.cantidadMedicos() + 1;
                System.out.println("--Ingresa el nombre completo--");
                nombre = entrada.readLine();
                System.out.println("--Ingresa la especialidad del medico--");
                String especialidad = entrada.readLine();
                Medico nuevoMedico = new Medico(id,nombre,especialidad);
                medicos.añadirLista(nuevoMedico);
                medicos.listM();
                break;
            case 2:
                System.out.println("Seleccionaste \"Dar de alta a un paciente\""); 
                System.out.println("------------------------------------");
                id = pacientes.cantidadPacientes() + 1;
                System.out.println("--Ingresa el nombre completo--");
                nombre = entrada.readLine();
                Paciente nuevoPaciente = new Paciente(id,nombre);
                pacientes.añadirLista(nuevoPaciente);
                pacientes.listP();
                break;
            case 3:
                System.out.println("Seleccionaste \"Crear una cita\""); 
                System.out.println("------------------------------------");
                id = citas.cantidadCitas() + 1;
                System.out.println("--Ingresa el motivo de la cita--");
                String motivo = entrada.readLine();
                System.out.println("--Ingresa el día de la cita (Formato: dd/mm/aa)--");
                String día = entrada.readLine();
                System.out.println("--Ingresa la hora de la cita (Formato: hh:mm)--");
                String hora = entrada.readLine();
                String fecha = día +" "+ hora;
                System.out.println("--Ingresa el id del doctor para establecer la cita--");
                System.out.println("---------------------------------------:");
                System.out.println("Lista medicos:");
                medicos.listM();
                System.out.println("---------------------------------------:");
                int idMedico = Integer.parseInt(entrada.readLine());
                Medico medi = new Medico();
                medi = medicos.listaMed.get(idMedico-1);
                System.out.println("--Ingresa el id del paciente para establecer la cita--");
                System.out.println("---------------------------------------:");
                System.out.println("Lista pacientes:");
                pacientes.listP();
                System.out.println("---------------------------------------:");
                int idPaciente = Integer.parseInt(entrada.readLine());
                Paciente pac = new Paciente();
                pac = pacientes.listaPac.get(idPaciente-1);
                Cita nuevaCita = new Cita(id,motivo,fecha,medi,pac);
                citas.añadirLista(nuevaCita);
                citas.listC();
                break;
            case 4:
                System.out.println("Seleccionaste \"Entrar como administrdor\""); 
                System.out.println("------------------------------------");
                if(usuario.equalsIgnoreCase("Ricardo")){
                    System.out.println("Acceso permitido;");
                    menu2(); 
                }else{
                    System.out.println("Acceso denegado:");
                }
                break;
            case 5:
                System.out.println("Lista medicos");
                System.out.println("------------------------------------");
                medicos.listM();
                System.out.println("------------------------------------");
                System.out.println("Lista pacientes");
                System.out.println("------------------------------------");
                pacientes.listP();
                System.out.println("------------------------------------");
                System.out.println("Lista citas");
                System.out.println("------------------------------------");
                citas.listC();
                System.out.println("------------------------------------");
                break;
            default:
                System.out.println("La opción ingresada es incorrecta, "
                        + "ingresa alguna opción valida");
                System.out.println("¿Deseas volver a intentar? (S o si para \"Sí\" o cualquier otra cosa para \"No\"");
                repetir = entrada.readLine();
                if(repetir.equalsIgnoreCase("S") || repetir.equalsIgnoreCase("Si")){
                   menu(usuario); 
                }else{
                    System.out.println("Gracias por usar el programa");
                }
                break;
        }
        System.out.println("¿Deseas realizar algo más? (S o si para \"Sí\" o cualquier otra cosa para \"No\")");
        repetir = entrada.readLine();
        if(repetir.equalsIgnoreCase("S") || repetir.equalsIgnoreCase("Si")){
           menu(usuario); 
        }else{
            System.out.println("Gracias por usar el programa");
        }
    }
    
    public static void menu2() throws IOException{
        int opcion;
        int id;
        String repetir;
        int eleccion;
        String cambiar;
        System.out.println("¿Qué deseas realizar?:\n"
                + "1.-Dar de baja o actualizar medico\n"
                + "2.-Dar de baja o actualizar paciente\n"
                + "3.Borrar o actualizar cita\n"
                + "4.Borra sistema por completo");
        opcion=Integer.parseInt(entrada.readLine());
        switch(opcion){
            case 1:
                System.out.println("Seleccionaste \"Dar de baja o actualizar medico\"");
                System.out.println("------------------------------------");
                System.out.println("¿Qué deseas realizar?:\n"
                        + "1.-Dar de baja\n"
                        + "2.-Actualizar");
                eleccion = Integer.parseInt(entrada.readLine());
                System.out.println("Ingresa el id del medico con el que deseas interactuar;");
                System.out.println("Lista medicos");
                System.out.println("------------------------------------");
                medicos.listM();
                System.out.println("------------------------------------");
                id = Integer.parseInt(entrada.readLine());
                switch (eleccion) {
                    case 1:                     
                        for (int i=0;i<medicos.listaMed.size();i++){
                            if(medicos.listaMed.get(i).getIdMedico()==id){
                                for(int j=i;j<medicos.listaMed.size();j++){
                                    if(j<medicos.listaMed.size()-1){
                                       medicos.listaMed.get(j+1).setIdMedico(j+1); 
                                    }
                                }
                                medicos.listaMed.remove(i);
                            }
                        } 
                        medicos.listM();
                        break;
                    case 2:
                        System.out.println("¿Qué deseas actulizar de un?:\n"
                        + "1.-Nombre\n"
                        + "2.-Especialidad");
                        eleccion = Integer.parseInt(entrada.readLine());
                        switch (eleccion) {
                            case 1:
                                System.out.println("¿Qué nombre le quieres poner ahora?");
                                cambiar = entrada.readLine();
                                for (int i=0;i<medicos.listaMed.size();i++){
                                    if(medicos.listaMed.get(i).getIdMedico()==id){
                                        medicos.listaMed.get(i).setNombreMedico(cambiar);
                                    }
                                } 
                                medicos.listM();
                                break;
                            case 2:
                                System.out.println("¿Qué especialidad le quieres poner ahora?");
                                cambiar = entrada.readLine();
                                for (int i=0;i<medicos.listaMed.size();i++){
                                    if(medicos.listaMed.get(i).getIdMedico()==id){
                                        medicos.listaMed.get(i).setEspecialidad(cambiar);
                                    }
                                }
                                medicos.listM();
                                break;
                            default:
                                System.out.println("La opción ingresada es incorrecta");
                                break;
                        }
                        break;
                    default:
                        System.out.println("La opción ingresada es incorrecta, "
                        + "ingresa alguna opción valida");
                        break;
                    }
                break;
            case 2:
                System.out.println("Seleccionaste \"Dar de baja o actualizar paciente\""); 
                System.out.println("------------------------------------");
                System.out.println("¿Qué deseas realizar?:\n"
                        + "1.-Dar de baja\n"
                        + "2.-Actualizar");
                eleccion = Integer.parseInt(entrada.readLine());
                System.out.println("Ingresa el id del paciente con el que deseas interactuar;");
                System.out.println("Lista pacientes");
                System.out.println("------------------------------------");
                pacientes.listP();
                System.out.println("------------------------------------");
                id = Integer.parseInt(entrada.readLine());
                switch (eleccion) {
                    case 1:                     
                        for (int i=0;i<pacientes.listaPac.size();i++){
                            if(pacientes.listaPac.get(i).getIdPaciente()==id){
                                for(int j=i;j<pacientes.listaPac.size();j++){
                                    if(j<pacientes.listaPac.size()-1){
                                       pacientes.listaPac.get(j+1).setIdPaciente(j+1); 
                                    }
                                }
                                pacientes.listaPac.remove(i);
                            }
                        } 
                        pacientes.listP();
                        break;
                    case 2:
                        System.out.println("¿Qué nombre le quieres poner ahora?");
                        cambiar = entrada.readLine();
                        for (int i=0;i<pacientes.listaPac.size();i++){
                            if(pacientes.listaPac.get(i).getIdPaciente()==id){
                                pacientes.listaPac.get(i).setNombrePaciente(cambiar);
                            }
                        } 
                        pacientes.listP();
                        break;
                    default:
                        System.out.println("La opción ingresada es incorrecta, "
                        + "ingresa alguna opción valida");
                        break;
                    }
                break;
            case 3:
                System.out.println("Seleccionaste \"Borrar o actualizar cita\""); 
                System.out.println("------------------------------------");
                System.out.println("¿Qué deseas realizar?:\n"
                        + "1.-Dar de baja\n"
                        + "2.-Actualizar");
                eleccion = Integer.parseInt(entrada.readLine());
                System.out.println("Ingresa el id de la cita con la que deseas interactuar;");
                System.out.println("Lista citas");
                System.out.println("------------------------------------");
                citas.listC();
                System.out.println("------------------------------------");
                id = Integer.parseInt(entrada.readLine());
                switch (eleccion) {
                    case 1:                     
                        for (int i=0;i<citas.listaCit.size();i++){
                            if(citas.listaCit.get(i).getId()==id){
                                for(int j=i;j<citas.listaCit.size();j++){
                                    if(j<citas.listaCit.size()-1){
                                       citas.listaCit.get(j+1).setId(j+1); 
                                    }
                                }
                                citas.listaCit.remove(i);
                            }
                        } 
                        citas.listC();
                        break;
                    case 2:
                        System.out.println("¿Qué deseas actulizar de un?:\n"
                        + "1.-Motivo\n"
                        + "2.-Fecha\n"
                        + "3.-Medico\n"
                        + "4.-Paciente");
                        eleccion = Integer.parseInt(entrada.readLine());
                        switch (eleccion) {
                            case 1:
                                System.out.println("¿Qué motivo le quieres poner ahora?");
                                cambiar = entrada.readLine();
                                for (int i=0;i<citas.listaCit.size();i++){
                                    if(citas.listaCit.get(i).getId()==id){
                                        citas.listaCit.get(i).setMotivoCita(cambiar);
                                    }
                                } 
                                citas.listC();
                                break;
                            case 2:
                                System.out.println("¿Qué fecha le quieres poner ahora? (Formato Día: dd/mm/aa "
                                        + "Formato hota: hh:mm)");
                                cambiar = entrada.readLine();
                                for (int i=0;i<citas.listaCit.size();i++){
                                    if(citas.listaCit.get(i).getId()==id){
                                        citas.listaCit.get(i).setFecha(cambiar);
                                    }
                                }
                                citas.listC();
                                break;
                            case 3:
                                System.out.println("¿Qué medico le quieres le quieres poner ahora? (ingresa el id))");
                                System.out.println("Lista medicos:");
                                medicos.listM();
                                System.out.println("---------------------------------------:");
                                int idMedico = Integer.parseInt(entrada.readLine());
                                Medico medi = new Medico();
                                medi = medicos.listaMed.get(idMedico-1);

                                for (int i=0;i<citas.listaCit.size();i++){
                                    if(citas.listaCit.get(i).getId()==id){
                                        citas.listaCit.get(i).setMedico(medi);
                                    }
                                }
                                citas.listC();
                                break;    
                            case 4:
                                System.out.println("¿Qué paciente le quieres poner ahora? (ingresa el id))");
                                System.out.println("Lista pacientes:");
                                pacientes.listP();
                                System.out.println("---------------------------------------:");
                                int idPaciente = Integer.parseInt(entrada.readLine());
                                Paciente pac = new Paciente();
                                pac = pacientes.listaPac.get(idPaciente-1);
                                
                                for (int i=0;i<citas.listaCit.size();i++){
                                    if(citas.listaCit.get(i).getId()==id){
                                        citas.listaCit.get(i).setPaciente(pac);
                                    }
                                }
                                citas.listC();
                                break;
                            default:
                                System.out.println("La opción ingresada es incorrecta");
                                break;
                        }
                        break;
                    default:
                        System.out.println("La opción ingresada es incorrecta, "
                        + "ingresa alguna opción valida");
                        break;
                    }
                break;
            case 4:
                System.out.println("Seleccionaste \"Borra sistema por completo\""); 
                System.out.println("------------------------------------");
                medicos.listaMed.removeAll(medicos.listaMed);
                pacientes.listaPac.removeAll(pacientes.listaPac);
                citas.listaCit.removeAll(citas.listaCit);
                break;
            default:
                System.out.println("La opción ingresada es incorrecta, "
                        + "ingresa alguna opción valida");
                System.out.println("¿Deseas volver a intentar o salir al menu principal? "
                        + "(S o si para \"Continuar\" o cualquier otra cosa para \"Volver a menu principal\"");
                repetir = entrada.readLine();
                if(repetir.equalsIgnoreCase("S") || repetir.equalsIgnoreCase("Si")){
                   menu2(); 
                }else{
                    System.out.println("Volviendo a menú principal...");
                    System.out.println("Menu principal;");
                }
        }
        System.out.println("¿Deseas hacer algo más o salir al menu principal? "
                        + "(S o si para \"Continuar\" o cualquier otra cosa para \"Volver a menu principal\"");
                repetir = entrada.readLine();
                if(repetir.equalsIgnoreCase("S") || repetir.equalsIgnoreCase("Si")){
                   menu2(); 
                }else{
                    System.out.println("Volviendo a menú principal...");
                    System.out.println("Menu principal;");
                }
    }

}
------------------------------------------------------------------------------------------------------------------------------
Clase "Medico":
public class Medico {
    private int idMedico;
    private String nombreMedico;
    private String especialidad;
    public ArrayList<Medico> listaMed;
    public ArrayList<String> lista1 = new ArrayList<String>();

    public Medico(){
        
    }
    
    public Medico(int idMedico, String nombreMedico, String especialidad) {
        this.idMedico = idMedico;
        this.nombreMedico = nombreMedico;
        this.especialidad = especialidad;
    }

    public int getIdMedico() {
        return idMedico;
    }

    public void setIdMedico(int idMedico) {
        this.idMedico = idMedico;
    }

    public String getNombreMedico() {
        return nombreMedico;
    }

    public void setNombreMedico(String nombreMedico) {
        this.nombreMedico = nombreMedico;
    }

    public String getEspecialidad() {
        return especialidad;
    }

    public void setEspecialidad(String especialidad) {
        this.especialidad = especialidad;
    }
    
    //Necesario añadir en los demas
    public void cargarMedico() throws IOException{
        if (listaMed == null) {
            listaMed = new ArrayList<>();
        }

        Medico medico1 = new Medico(1,"Jaime Mesa","General");
        Medico medico2 = new Medico(2,"Ramon Valenzuela","Traumatologo");
        listaMed.add(medico1);
        listaMed.add(medico2);
        
        int id ;
        String file="C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\medicos.txt";
        File archivo = new File(file);
        if (!archivo.exists()) {
            System.out.println("No se ha detectado ninguna lista existente");
        }else{
            ArrayList<String> texto = new ArrayList<String>();
            texto=leerTxt("C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\medicos.txt");

            for(int i=0; i<texto.size(); i++){
                String data = texto.get(i);
                String[] split = data.split(",");
                String a="";
                String b="";
                a=split[0];
                b=split[1];
                id = listaMed.size() + 1;
                Medico nuevoMedico = new Medico(id,a,b);
                listaMed.add(nuevoMedico);
            }
        }
        System.out.println("Los medicos han sido cargados: " + listaMed.size());
    }
    
    public void añadirLista(Medico medico) throws IOException{
       listaMed.add(medico);
       for (int i=2; i<listaMed.size(); i++){
          lista1.add(listaMed.get(i).getNombreMedico()+","+listaMed.get(i).getEspecialidad()); 
       }
       System.out.println("El medico fue añadido a la lista"); 
       save(lista1);
    }
    
    public void listM() {
        if(listaMed.size()==0){
            System.out.println("No hay Medicos para mostrar, crea alguno");
        }else{
            for (int i=0;i<listaMed.size();i++){  
                System.out.println(listaMed.get(i).getAll());
            } 
        }
    }
    
    public String getAll() {
        return "ID medico:"+idMedico+", "+"Nombre medico:"+nombreMedico+", "+"Especialidad:"+especialidad;
    }
    
    public int cantidadMedicos(){
        return listaMed.size();
    }
    
    public void save(ArrayList<String> lista) throws IOException{
        String file="C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\medicos.txt";
        FileWriter fichero = new FileWriter(file);
        fichero.close();
        File archivo = new File(file);
        archivo.delete();
        BufferedWriter bufferW = new BufferedWriter(new FileWriter(file, true));
        for(int i=0; i<lista.size(); i++){
            bufferW.write(lista.get(i)+"\n");
        }
        bufferW.close();
        System.out.println("Se ha guardado el contenido con exito");
    }
    
    public static ArrayList leerTxt(String direccion){
        ArrayList<String> lista = new ArrayList<String>();
        try{
            BufferedReader bf = new BufferedReader(new FileReader(direccion));
            String bfRead;
            while((bfRead = bf.readLine()) != null){
                lista.add(bfRead);
            }   
        }catch(Exception e){
            System.out.println("No se encontró archivo");
        }
        return lista;
    }
}
------------------------------------------------------------------------------------------------------------------------------
Clase "Paciente":
public class Paciente {
    private int idPaciente;
    private String nombrePaciente;
    public ArrayList<Paciente> listaPac;
    public ArrayList<String> lista2 = new ArrayList<String>();

    public Paciente(){
        
    }
    
    public Paciente(int idPaciente, String nombrePaciente) {
        this.idPaciente = idPaciente;
        this.nombrePaciente = nombrePaciente;
    }
    
    public int getIdPaciente() {
        return idPaciente;
    }

    public void setIdPaciente(int idPaciente) {
        this.idPaciente = idPaciente;
    }

    public String getNombrePaciente() {
        return nombrePaciente;
    }

    public void setNombrePaciente(String nombrePaciente) {
        this.nombrePaciente = nombrePaciente;
    }

    //Necesario añadir en los demas
    public void cargarPacientes() {
        if (listaPac == null) {
            listaPac = new ArrayList<>();
        }

        Paciente paciente1 = new Paciente(1,"Antonio Medina");
        Paciente paciente2 = new Paciente(2,"Gustavo Flores");
        listaPac.add(paciente1);
        listaPac.add(paciente2);
        
        
        int id ;
        String file="C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\pacientes.txt";
        File archivo = new File(file);
        if (!archivo.exists()) {
            System.out.println("No se ha detectado ninguna lista existente");
        }else{
            ArrayList<String> texto = new ArrayList<String>();
            texto=leerTxt("C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\pacientes.txt");

            for(int i=0; i<texto.size(); i++){
                 String data = texto.get(i);
                 String a= data;
                id = listaPac.size() + 1;
                Paciente nuevoPaciente = new Paciente(id,a);
                listaPac.add(nuevoPaciente);
            }
        }
        System.out.println("Los pacientes han sido cargados: " + listaPac.size());
    }
    
    public void añadirLista(Paciente paciente) throws IOException{
       listaPac.add(paciente);
       for (int i=2; i<listaPac.size(); i++){
          lista2.add(listaPac.get(i).getNombrePaciente()); 
       }
       System.out.println("El paciente fue añadido a la lista"); 
       save(lista2);
    }
    
    public void listP() {
        if(listaPac.size()==0){
            System.out.println("No hay pacientes para mostrar, crea alguno");
        }else{
            for (int i=0;i<listaPac.size();i++){  
                System.out.println(listaPac.get(i).getAll());
            } 
        }
    }
    
    public String getAll() {
        return "ID paciente:"+idPaciente+", "+"Nombre paciente:"+nombrePaciente;
    }
    
    public int cantidadPacientes(){
        return listaPac.size();
    }
    
    public void save(ArrayList<String> lista) throws IOException{
        String file="C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\pacientes.txt";
        FileWriter fichero = new FileWriter(file);
        fichero.close();
        File archivo = new File(file);
        archivo.delete();
        BufferedWriter bufferW = new BufferedWriter(new FileWriter(file, true));
        for(int i=0; i<lista.size(); i++){
            bufferW.write(lista.get(i)+"\n");
        }
        bufferW.close();
        System.out.println("Se ha guardado el contenido con exito");
    }
    
    public static ArrayList leerTxt(String direccion){
        ArrayList<String> lista = new ArrayList<String>();
        try{
            BufferedReader bf = new BufferedReader(new FileReader(direccion));
            String bfRead;
            while((bfRead = bf.readLine()) != null){
                lista.add(bfRead);
            }   
        }catch(Exception e){
            System.out.println("No se encontró archivo");
        }
        return lista;
    }
}
------------------------------------------------------------------------------------------------------------------------------
Clase "Cita":
public class Cita {
    private int id;
    private String motivoCita;
    private String fecha;
    private Medico medico;
    private Paciente paciente;
    public ArrayList<Cita> listaCit;
    public ArrayList<String> lista3 = new ArrayList<String>();
    
    public Cita(){
        
    }

    public Cita(int id, String motivoCita, String fecha, Medico medico, Paciente paciente) {
        this.id = id;
        this.motivoCita = motivoCita;
        this.fecha = fecha;
        this.medico = medico;
        this.paciente = paciente;
    }
    
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getMotivoCita() {
        return motivoCita;
    }

    public void setMotivoCita(String motivoCita) {
        this.motivoCita = motivoCita;
    }

    public String getFecha() {
        return fecha;
    }

    public void setFecha(String fecha) {
        this.fecha = fecha;
    }

    public Medico getMedico() {
        return medico;
    }

    public void setMedico(Medico medico) {
        this.medico = medico;
    }

    public Paciente getPaciente() {
        return paciente;
    }

    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }

    
    //Necesario añadir en los demas
    public void cargarCitas(Medico medic, Paciente pacient) {
        if (listaCit == null) {
            listaCit = new ArrayList<>();
        }

        Medico medi = new Medico();
        medi = medic.listaMed.get(1);
        Paciente pac = new Paciente();
        pac = pacient.listaPac.get(1);
        Cita cita1 = new Cita(1,"Fractura de brazo","06/12/21 16:30", medi, pac);
        listaCit.add(cita1);
        
        
        int id ;
        String file="C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\citas.txt";
        File archivo = new File(file);
        if (!archivo.exists()) {
            System.out.println("No se ha detectado ninguna lista existente");
        }else{
            ArrayList<String> texto = new ArrayList<String>();
            texto=leerTxt("C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\citas.txt");

            for(int i=0; i<texto.size(); i++){
                String data = texto.get(i);
                String[] split = data.split(",");
                String a="";
                String b="";
                String c="";
                String d="";
                a=split[0];
                b=split[1];
                c=split[2];
                d=split[3];
                id = listaCit.size() + 1;
                for (int x=0;x<medic.listaMed.size();x++){  
                    if(medic.listaMed.get(x).getNombreMedico().equals(c)){
                        medi = medic.listaMed.get(x);
                    }
                }
                for (int x=0;x<pacient.listaPac.size();x++){  
                    if(pacient.listaPac.get(x).getNombrePaciente().equals(d)){
                        pac = pacient.listaPac.get(x);
                    }
                }

                Cita nuevaCita = new Cita(id,a,b,medi,pac);
                listaCit.add(nuevaCita);
            }
        }
        
        System.out.println("Las citas han sido cargadas: " + listaCit.size());
    }
    
    public void añadirLista(Cita cita) throws IOException{
       listaCit.add(cita);
       for (int i=1; i<listaCit.size(); i++){
          lista3.add(listaCit.get(i).getMotivoCita()+","+listaCit.get(i).getFecha()+","+listaCit.get(i).getMedico().getNombreMedico()
          +","+listaCit.get(i).getPaciente().getNombrePaciente()); 
       }
       System.out.println("El paciente fue añadido a la lista"); 
       save(lista3);
    }
    
    public void listC() {
        if(listaCit.size()==0){
            System.out.println("No hay pacientes para mostrar, crea alguno");
        }else{
            for (int i=0;i<listaCit.size();i++){  
                System.out.println(listaCit.get(i).getAll());
            } 
        }
    }
    
    public String getAll() {
        return "ID cita:"+id+", "+"Motivo cita:"+motivoCita+", "+"Fecha cita:"+fecha+", "
                +"Medico:"+medico.getNombreMedico()+", "+"Paciente:"+paciente.getNombrePaciente();
    }
    
    public int cantidadCitas(){
        return listaCit.size();
    }
    
    public void save(ArrayList<String> lista) throws IOException{
        String file="C:\\Users\\Cortez Ramos\\OneDrive\\Documentos\\txt2\\citas.txt";
        FileWriter fichero = new FileWriter(file);
        fichero.close();
        File archivo = new File(file);
        archivo.delete();
        BufferedWriter bufferW = new BufferedWriter(new FileWriter(file, true));
        for(int i=0; i<lista.size(); i++){
            bufferW.write(lista.get(i)+"\n");
        }
        bufferW.close();
        System.out.println("Se ha guardado el contenido con exito");
    }
    
    public static ArrayList leerTxt(String direccion){
        ArrayList<String> lista = new ArrayList<String>();
        try{
            BufferedReader bf = new BufferedReader(new FileReader(direccion));
            String bfRead;
            while((bfRead = bf.readLine()) != null){
                lista.add(bfRead);
            }   
        }catch(Exception e){
            System.out.println("No se encontró archivo");
        }
        return lista;
    }
}
------------------------------------------------------------------------------------------------------------------------------
Clase "Usuario":
public class Usuario {
    private Integer id;
    private String nombre;
    private String contrasena;

    public Usuario() {
    }

    public Usuario(Integer id, String nombre, String contrasena) {
        this.id = id;
        this.nombre = nombre;
        this.contrasena = contrasena;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getContrasena() {
        return contrasena;
    }

    public void setContrasena(String contrasena) {
        this.contrasena = contrasena;
    }
}